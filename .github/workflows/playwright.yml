name: Playwright tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Build
        run: pnpm build
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      # テスト実行
      - name: Run Playwright tests
        id: playwright-tests
        run: |
          set +e  # エラーが発生してもスクリプトの実行を継続
          pnpm test-e2e:all --trace on
          E2E_EXIT_CODE=$?  # 終了コードを保存
          pnpm test-ct:all --trace on
          CT_EXIT_CODE=$?   # 終了コードを保存
          if [ $E2E_EXIT_CODE -ne 0 ] || [ $CT_EXIT_CODE -ne 0 ]; then
            exit 1  # どちらかのテストが失敗した場合はステップを失敗させる
          fi
      # playwright-reportをartifactsに保存
      - name: Upload Artifacts - Playwright Report
        uses: actions/upload-artifact@v4
        if: always() && !cancelled()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # GitHub Pages 用のindex.html をplaywright-reportにコピー
      - name: Create index.html
        if: always() && !cancelled()
        run: cp .github/github-pages-index.html playwright-report/index.html
      # GitHub Pages用のartifactsを保存
      - name: Upload Artifacts - Pages Artifact
        uses: actions/upload-pages-artifact@v3
        if: always() && !cancelled()
        with:
          path: playwright-report/

      # actual snapshots を作成
      - name: Update Snapshots
        if: failure() && steps.playwright-tests.conclusion == 'failure'
        run: |
          rm -rf __snapshots__ && pnpm test-e2e:vrt --update-snapshots --reporter=null && pnpm test-ct:vrt --update-snapshots --reporter=null
          echo "LinkCard.ct.vrt.spec.tsx の内容:"
          cat src/components/LinkCard/LinkCard.ct.vrt.spec.tsx
      # actual snapshots をartifactsに保存
      - name: Upload Artifacts - Actual Snapshots
        uses: actions/upload-artifact@v4
        if: always() && !cancelled()
        with:
          name: actual-snapshots
          path: __snapshots__/
          retention-days: 30
  upload-artifact-to-pages:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    if: always() && !cancelled()
    steps:
      - name: Upload PagesArtifact to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
